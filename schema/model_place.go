/*
 * Microsoft Bot Connector API - v3.0
 *
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    Â© 2016 Microsoft
 *
 * API version: v3
 * Contact: botframework@microsoft.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package schema

// Place - Place (entity type: \"https://schema.org/Place\")
type Place struct {

	// Address of the place (may be `string` or complex object of type `PostalAddress`)
	Address map[string]interface{} `json:"address,omitempty"`

	// Geo coordinates of the place (may be complex object of type `GeoCoordinates` or `GeoShape`)
	Geo map[string]interface{} `json:"geo,omitempty"`

	// Map to the place (may be `string` (URL) or complex object of type `Map`)
	HasMap map[string]interface{} `json:"hasMap,omitempty"`

	// The type of the thing
	Type string `json:"type,omitempty"`

	// The name of the thing
	Name string `json:"name,omitempty"`
}
